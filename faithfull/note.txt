ML

Summa_{fx=1}ˆ{K} [log \alpha(x_{fx}ˆ{test} | x_{fx}ˆ{train})] = \
summa_{fx=1}ˆ{K} [log( \PI \summa_{n=1}ˆ{N_train} 1/N_train  Norm_dist(x_{fx}ˆ{test} | x_{fx}ˆ{train}, \sigmaˆ2 * I )

2 cases two implement: 
\Summa = [\sigma_{1}ˆ{2} … \sigma_{n}ˆ{2} to in diagonal position]
\Summa = [\sigmaˆ{2} in diagonal position]

Use cases:
Outlier detection
Missing value imputation
DBSCAN-search for clusters
Classification
Data augmentation

How to start:
p(Xtest,z|Xtrain,Summa) = \Pi \summa_{n=1}ˆ{N_train} (1\N) * normal_dist(xtest|xtrain, Summa)

Take the log likelihood of this, Marginalizing
log(\Summa_{z} …. = log(\Summa_{z}….

Estimate Z in the E step, estimate Sigma in the M step
Optimise test denzsity


Next week:
Holdout CV with EM -> 2d data -> plot the data
Old faithful dataset -> perfect for two gaussians
